# Прогнозирование с помощью модели Хольта-Винтерса

# Устанавливаембиблиотеки
install.packages("googleAuthR") 
install.packages("googleAnalyticsR") 
install.packages("tidyverse") 
install.packages("forecast") 
install.packages("reshape2")

# Загружаембиблиотеки 
library('googleAuthR') 
library("googleAnalyticsR") 
library("tidyverse") 
library("forecast") 
library("reshape2")
library("dplyr") 

# Авторизация Google Analytics в R
ga_auth()
ga_id <- 000000000
gadata <- google_analytics (ga_id, date_range=c('2018-01-01','2018-06-30'), metrics = 'sessions',
                            dimensions = 'date',
                            max = 5000)

gadata <- Analytics_LRP_RU_laroche_posay_ru_Website_New_Custom_Report_20190101_20190630
plot(gadata)
gadata <- arrange(gadata, gadata$Date)
     
timeseries <- ts(gadata$Sessions, start=2019-01-01, frequency=7) 
components <- decompose(timeseries) 
plot(components)

# Линия тренда

ggplot(data = gadata, aes(x = gadata$Date,y = gadata$Sessions) ) + geom_point() + geom_smooth() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))


# Обратите внимание как мы добавляем столбец в data.frame
gadata$adjusted <- gadata$Sessions - components$seasonal 
theme(axis.text.x = element_text(angle = 90, hjust = 1))

# Прогнозирование

forecastmodel <- HoltWinters(timeseries)
plot(forecastmodel)
  
  forecast <- forecast:::forecast.HoltWinters(forecastmodel, h=30) # 26 days in future
  plot(forecast, xlim=c(2020,2045))
  
  forecastdf <- as.data.frame(forecast)
  totalrows <- nrow(gadata) + nrow(forecastdf)
  forecastdata <- data.frame(day=c(1:totalrows),
                             actual=c(gadata$Sessions,rep(NA,nrow(forecastdf))),
                             forecast=c(rep(NA,nrow(gadata)-1),tail(gadata$Sessions,1),forecastdf$"Point Forecast"),
                             forecastupper=c(rep(NA,nrow(gadata)-1),tail(gadata$Sessions,1),forecastdf$"Hi 80"),
                             forecastlower=c(rep(NA,nrow(gadata)-1),tail(gadata$Sessions,1),forecastdf$"Lo 80")
  )
  
  ggplot(forecastdata, aes(x=day)) +
    geom_line(aes(y=actual),color="black") +
    geom_line(aes(y=forecast),color="blue") +
    geom_ribbon(aes(ymin=forecastlower,ymax=forecastupper), alpha=0.4, fill="green") +
    xlim(c(0,215)) +
    xlab("Day") +
    ylab("Sessions")
